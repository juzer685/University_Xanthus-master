//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace University.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UniversityEntities : DbContext
    {
        public UniversityEntities()
            : base("name=UniversityEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CategoryMaster> CategoryMaster { get; set; }
        public virtual DbSet<CategoryUserMapping> CategoryUserMapping { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<FAQDoc> FAQDoc { get; set; }
        public virtual DbSet<GeneralFeedback> GeneralFeedback { get; set; }
        public virtual DbSet<Login_tbl> Login_tbl { get; set; }
        public virtual DbSet<ProductFAQs> ProductFAQs { get; set; }
        public virtual DbSet<ProductFAQVideos> ProductFAQVideos { get; set; }
        public virtual DbSet<ProductFeedback> ProductFeedback { get; set; }
        public virtual DbSet<ProductSpec> ProductSpec { get; set; }
        public virtual DbSet<ProductUserGuide> ProductUserGuide { get; set; }
        public virtual DbSet<RecentVisitedProduct> RecentVisitedProduct { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<SubCategoryMaster> SubCategoryMaster { get; set; }
        public virtual DbSet<ProductDocuments> ProductDocuments { get; set; }
        public virtual DbSet<EmailInfo> EmailInfoes { get; set; }
        public virtual DbSet<HomeSlider> HomeSlider { get; set; }
        public virtual DbSet<HomeBanner> HomeBanner { get; set; }
        public virtual DbSet<FAQ> FAQ { get; set; }
        public virtual DbSet<CardTransactionDetails> CardTransactionDetails { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<ProductVideos> ProductVideos { get; set; }
        public virtual DbSet<CardDetails> CardDetails { get; set; }
    
        public virtual ObjectResult<GetCustomerList_Result> GetCustomerList(Nullable<int> webUserID)
        {
            var webUserIDParameter = webUserID.HasValue ?
                new ObjectParameter("WebUserID", webUserID) :
                new ObjectParameter("WebUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerList_Result>("GetCustomerList", webUserIDParameter);
        }
    
        public virtual ObjectResult<SmartSerach_Result> SmartSerach(string freeText)
        {
            var freeTextParameter = freeText != null ?
                new ObjectParameter("freeText", freeText) :
                new ObjectParameter("freeText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SmartSerach_Result>("SmartSerach", freeTextParameter);
        }
    
        public virtual ObjectResult<string> sp_LoginUniersity(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_LoginUniersity", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Sp_Login_form_Result> Sp_Login_form(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Login_form_Result>("Sp_Login_form", userNameParameter, passwordParameter);
        }
    }
}
