@model University.UI.Areas.Admin.Models.ProductFaqViewModel
@{
    ViewBag.Title = "FAQs";

}
<link href="~/dist/css/Custom.css" rel="stylesheet" />
<form onsubmit="SaveProductFormFaq(event)" name="ProductFormFaq" enctype="multipart/form-data" method="post" action="/Admin/Product/SaveProductProductFAQ">
    <div class="row py-2">

        <div class="col">
            @Html.HiddenFor(y => y.ProductId)
            @Html.Hidden("FaqId", Model.Id)
            @Html.TextBoxFor(m => m.Question, new { @class = "form-control text-overflow", @Required = "Required", @maxlength = "100", title = Model.Question })
            @Html.ValidationMessageFor(x => x.Question, null, new { @class = "", style = "color:red;" })
        </div>
        <input name="AssocitedID" id="ProductFAQAssocitedID" type="hidden" />
        <div class="col">
            @Html.TextBoxFor(m => m.Answer, new { @class = "form-control text-overflow", @Required = "Required", @maxlength = "1000", title = Model.Answer })
            @Html.ValidationMessageFor(x => x.Answer, null, new { @class = "", style = "color:red;" })
        </div>
        <div class="col">
            <input type="submit" class="btn btn-primary" value="Save" title="Save" />
            <input type="button" class="btn btn-primary" value="Delete" onclick="DeleteFAQ(this,'@Model.Id');" title="Delete" />
            <input type="button" class="btn btn-primary" value="Add/Edit Tutorials" onclick="AddEditFAQVideos('@Model.Id')" title="Add/Edit Tutorials" />
        </div>
    </div>
</form>
