@model  University.UI.Areas.Admin.Models.ProductVideoViewModel

<form onsubmit="SaveProductProductVideoForms(event)" name="ProductVideoForm" enctype="multipart/form-data" method="post" action="/Admin/Product/SaveProductVideo">
    <div class="row py-2">
        <div class="col">
            <input name="AssocitedID" id="ProductvideosAssocitedID" type="hidden" />
            @Html.HiddenFor(y => y.ProductId)
            @Html.Hidden("ProductVideoId", Model.Id, new { @Value = Model.Id })
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control", @required = "required", @pattern = "^[^<>%$*@!#]*$", @title = "Special characters are not allowed." })
            @Html.ValidationMessageFor(m => m.Title)
        </div>
        <div class="col input-icon ">
            @Html.TextBoxFor(m => m.VideoRate, new { @class = "form-control", @required = "required"})
            <i>$</i>
        </div>
        <div class="col">
            @Html.TextAreaFor(m => m.Decription, new { @class = "form-control", rows = "1", @required = "required" ,})
            @Html.ValidationMessageFor(m => m.Decription)
        </div>
        @if (string.IsNullOrWhiteSpace(Model.VideoURL))
        {

            <div class="col">
                @*@Html.TextBoxFor(m => m.VideoURL, new { @class = "form-control", @required = "required", @pattern = @"^https?:\/\/[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-/]+$", title = "Ex : https://player.vimeo.com/video/322925106" })*@
                @Html.TextBoxFor(m => m.VideoURL, new { @class = "form-control", @required = "required", title = "Ex : https://player.vimeo.com/video/322925106" })
            </div>
        }
        else
        {
            <div class="col">
                @Html.TextBoxFor(m => m.VideoURL, new { @class = "form-control", @required = "required", @pattern = @"^https?:\/\/[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-/]+$", title = "Ex : https://player.vimeo.com/video/322925106" })

            </div>
        }

        <div class="col" hidden>
            @if (!string.IsNullOrWhiteSpace(Model.VideoURL))
            {
                <a onclick="ShowProductVideo('@Model.VideoURL'); return false;" href="" target_="blank"><img width="100px" height="70px" class="Thumbnail" src="@Model.ImageFullPath" onerror="this.onerror = null; this.src = '/images/NoImageAvailable.jpg';" /></a>
                <input type="file" onchange="readURLThumnale(this);" class="FileInput" name="ProductVideoImg" accept="image/*" />
            }
            else
            {
                <img width="100px" height="70px" class="Thumbnail" src="@Model.ImageFullPath" onerror="this.onerror = null; this.src = '/images/NoImageAvailable.jpg';" />
                <input type="file" onchange="readURLThumnale(this);" class="FileInput" name="ProductVideoImg" accept="image/*" />
            }
        </div>
      
        <div class="col">
            <input type="submit" class="btn btn-primary" value="Save" />
            <input type="button" class="btn btn-primary" value="Delete" onclick="DeleteProductVideo(this,'@Model.Id')" />
        </div>


    </div>
</form>




