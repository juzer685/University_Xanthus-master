@model University.UI.Areas.Admin.Models.CoursePreviewViewModel
<style>
    #image-preview {
        margin-top: 21px;
        width: 250px;
        height: 100px;
        //border: 1px solid #ddd;
    }

    .info-text {
        font-size: 0.7rem;
        color: #03A9F4;
    }
</style>
<link href="~/dist/css/Custom.css" rel="stylesheet" />
<form onsubmit="SaveoursepreviewVideos(event)" name="courepreviewvideo" enctype="multipart/form-data" method="post" action="/Admin/Product/SaveoursepreviewVideos">
    @Html.HiddenFor(y => y.ProductID)
    @Html.Hidden("CourseVideoId", Model.PreviewID)
    <div class="row">
        <div class="col-md-6">

            <div class="form-group">
                <input name="AssocitedID" id="ProductUserGuideAssocitedID" type="hidden" />
                <label for="Title">Title</label>
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control txtOnly text-overflow", @required = "required", @maxlength = "90" })

                @Html.ValidationMessageFor(m => m.Title, null, new { @class = "", style = "color:red;" })
                @*@Html.ValidationMessageFor(m => m.Title)*@
            </div>
            <div class="form-group">
                <label for="Description">Description</label>
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control overflow-ellipsis", @required = "required", @maxlength = "1000" })
                @Html.ValidationMessageFor(m => m.Description, null, new { @class = "", style = "color:red;" })
            </div>
            <div class="form-group">
                <label for="Description">Description</label>
                @if (string.IsNullOrWhiteSpace(Model.VideoURL))
                {

                    @*@Html.TextBoxFor(m => m.VideoURL, new { @class = "form-control", @required = "required", @pattern = @"^https?:\/\/[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-/]+$", title = "Ex : https://player.vimeo.com/video/322925106" })*@
                    @Html.TextBoxFor(m => m.VideoURL, new
                    {
                        @class = "form-control text-overflow",
                        @required = "required",
                        @pattern = @"^https?:\/\/[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-/]+$",
                        title = Model.VideoURL,@*title = "Ex : Embed video Path not copy perfect"*@})

                }
                else
                {

                    @Html.TextBoxFor(m => m.VideoURL, new
                    {
                        @class = "form-control text-overflow",
                        @required = "required",
                        @pattern = @"^https?:\/\/[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-/]+$",
                        title = Model.VideoURL,@*title = "Ex : Embed video Path not copy perfect"*@})
                }
            </div>
        </div>
        
        <div class="right">
            <input type="submit" class="btn btn-primary" value="Save"  title="Save" />
            @*<button type="button" class="btn btn-primary" title="Save" onclick="SaveoursepreviewVideos(event)">Save</button>*@
            <button type="button" class="btn btn-primary" onclick="Cancel()" title="Cancel">Cancel</button>
            <button type="button" class="btn btn-primary" onclick="Cancel()" title="Exit">Exit</button>
        </div>
    </div>
</form>

<script src="~/Scripts/ProjectValidation.js"></script>
<script>
   function SaveoursepreviewVideos(e)
        {
                    alert("hiii");
                var form = $(e.target);
                    
                    var url = form.attr('action');
                    var formData = new FormData($(e.target)[0]);
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: formData, // serializes the form's elements.
                        enctype: 'multipart/form-data',
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (data) {
                            alert(data);
                            $('.overlayNew').css({ "visibility": "visible", "opacity": "1" });
                            //alert("Data Saved Successfully");
                            _showSuccessMessage("Data Saved Successfully");
                            setTimeout(function () { $('#video').trigger('click'); }, 1500);
                            //setTimeout(function () { location.reload(); }, 1500);
                        }
                    });

                    e.preventDefault();

        }
</script>



