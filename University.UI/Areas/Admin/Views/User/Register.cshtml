@model University.UI.Areas.Admin.Models.RegistrationVM

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{

    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- icheck bootstrap -->
    <link rel="stylesheet" href="../../plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <link href="~/dist/css/Loader.css" rel="stylesheet" />
}

<style>
    span.field-validation-error {
    width: 100%;
}
</style>


<div id="loaderring">
    <p class="loaderClass">
        <img src="~/Images/ajax_loader.gif" />
    </p>
</div>
<div class="register-box" style="margin:auto;">
    @if (Model.ID == 0)
    {
        <div class="register-logo">
            <a href="#" style="margin-top:10px"><b>User Registration</b></a>
        </div>

    }
    else
    {
        <div class="register-logo">
            <a href="#" style="margin-top:10px"><b>User Profile</b></a>
        </div>
    }


    <div class="card">
        <div class="card-body register-card-body">

            <form action="/Admin/User/Register" method="post" id="UserRegistrationForm">
                @Html.HiddenFor(x => x.ID)

                <div class="input-group mb-3">
                    @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control txtOnly capitalize", placeholder = "First Name", @maxlength = "50" })
                    @*<input type="text" class="form-control" name="FirstName" placeholder="First Name">*@
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <span class="fas fa-user"></span>
                        </div>
                    </div>
                    <span class="field-validation-error" data-valmsg-for="FirstName" data-valmsg-replace="true" style="color:red;"><span id="FirstName-error" class="">  @Html.ValidationMessageFor(x => x.FirstName, null, new { @class = "", style = "color:red;" })</span></span>
                </div>
                <div class="input-group mb-3">
                    @Html.TextBoxFor(x => x.LastName, new { @class = "form-control txtOnly capitalize", placeholder = "Last Name", @maxlength = "50" })
                    @*<input type="text" class="form-control" name="LastName" placeholder="LastName">*@
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <span class="fas fa-user"></span>
                        </div>
                    </div>
                    <span class="field-validation-error" data-valmsg-for="LastName" data-valmsg-replace="true" style="color:red;"><span id="LastName-error" class=""> @Html.ValidationMessageFor(x => x.LastName, null, new { @class = "", style = "color:red;" })</span></span>
                </div>
               

                <div class="input-group mb-3">
                    @Html.TextBoxFor(x => x.MobileNo, new { @class = "form-control onlynumbers", placeholder = "Mobile Number", @maxlength = "10" })
                    @*<input type="text" class="form-control" name="MobileNo" placeholder="Mobile Number">*@
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <span class="fas fa-mobile"></span>
                        </div>
                    </div>
                    <span class="field-validation-error" data-valmsg-for="MobileNo" data-valmsg-replace="true" style="color:red;"><span id="MobileNo-error" class="">  @Html.ValidationMessageFor(x => x.MobileNo, null, new { @class = "", style = "color:red;" })</span></span>
                </div>
               

                <div class="input-group mb-3">
                    @if (Model.ID != 0)
                    {
                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Email", Model.ReadOnly })

                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Email" })
                    }
                    @*<input type="text" class="form-control" name="Email" placeholder="Email">*@
                    <p id="GFG" style="font-size: 25px;"></p>
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <span class="fas fa-envelope"></span>
                        </div>
                    </div>
                    <span class="field-validation-error" data-valmsg-for="Email" data-valmsg-replace="true" style="color:red;"><span id="Email-error" class=""> @Html.ValidationMessageFor(x => x.Email, null, new { @class = "", style = "color:red;" })</span></span>

                </div>
               


                <div class="input-group mb-3">
                    @if (Model.ID != 0)
                    {
                        @*@Html.PasswordFor(x => x.Password, new { @class = "form-control Password", placeholder = "Password", value = Model.Password, Model.ReadOnly })*@

                    }
                    else
                    {
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control", placeholder = "Password", value = Model.Password })
                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-lock"></span>
                            </div>
                        </div>
                        <span class="field-validation-error" data-valmsg-for="Password" data-valmsg-replace="true" style="color:red;"><span id="Password-error" class=""> @Html.ValidationMessageFor(x => x.Password, null, new { @class = "", style = "color:red;margin-top:-18px;" })</span></span>

                    }

                    @*<input type="password" class="form-control" name="Password" placeholder="Password">*@


                </div>
               

                <div class="input-group mb-3">
                    @if (Model.ID != 0)
                    {
                        @*@Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password", value = Model.Password, Model.ReadOnly })*@
                    }
                    else
                    {
                        @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password", value = Model.Password })
                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-lock"></span>
                            </div>
                        </div>
                        <span class="field-validation-error" data-valmsg-for="ConfirmPassword" data-valmsg-replace="true" style="color:red;"><span id="ConfirmPassword-error" class=""> @Html.ValidationMessageFor(x => x.ConfirmPassword, null, new { @class = "", style = "color:red;" })</span></span>

                    }


                </div>
               


                @*<div class="input-group mb-3">
            <input type="password" class="form-control" name="ConfirmPassword" placeholder="Retype password">
            <div class="input-group-append">
                <div class="input-group-text">
                    <span class="fas fa-lock"></span>
                </div>
            </div>
        </div>*@
                @*@Html.ValidationMessageFor(x => x.CustomerId, null, new { @class = "", style = "color:red;" })
        <div class="input-group mb-3">
            <input type="email" class="form-control" placeholder="Customer">
            @Html.DropDownListFor(x => x.CustomerId, new SelectList(Model.CustomerList, "CustomerID", "CompanyName"), "Select Customer", new { @class = "form-control" })
            <div class="input-group-append">
                <div class="input-group-text">
                    <span class="fas fa-user"></span>
                </div>
            </div>
        </div>*@
                @if (Model.ID != 0)
                {
                    <div class="row">
                        <div class="col-12">
                            <div class="icheck-primary">
                                <input type="checkbox" id="agreeTerms" name="terms" value="agree"  @Model.Checked style="display:none"/>
                                @*<label for="agreeTerms">
                                    I accept the <a href="#" onclick="popuptermandcondition()">Terms & Conditions</a>
                                </label>*@
                            </div>
                        </div>
                        <!-- /.col -->
                        <!-- /.col -->
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="col-12">
                            <div class="icheck-primary">
                                <input type="checkbox" id="agreeTerms" name="terms" value="agree" @Model.Checked />
                                <label for="agreeTerms">
                                    I accept the <a href="#" onclick="popuptermandcondition()">Terms & Conditions</a>
                                </label>
                            </div>
                        </div>
                        <!-- /.col -->
                        <!-- /.col -->
                    </div>
                }
                @if (Model.ID == 0)
                {
                    <div class="row" style="justify-content:center;">
                        <div class="col-4">
                            @*<button type="submit" class="btn btn-primary btn-block">Register</button>*@
                            <input type="submit" id="UserRegisterationBtn" class="btn btn-primary btn-block" value="Register">
                        </div>
                    </div>
                }
                else
                {
                    <div class="row" style="justify-content:center;">
                        <div class="col-4">
                            @*<button type="submit" class="btn btn-primary btn-block">Register</button>*@
                            <input type="submit" id="UserRegisterationBtn" class="btn btn-primary btn-block" value="Update" style="margin-top: -50px;">
                        </div>
                    </div>
                }

            </form>

            @*<div class="social-auth-links text-center">
                    <p>- OR -</p>
                    <a href="#" class="btn btn-block btn-primary">
                        <i class="fab fa-facebook mr-2"></i>
                        Sign up using Facebook
                    </a>
                    <a href="#" class="btn btn-block btn-danger">
                        <i class="fab fa-google-plus mr-2"></i>
                        Sign up using Google+
                    </a>
                </div>

                <a href="login.html" class="text-center">I already have a membership</a>*@
        </div>
        <!-- /.form-box -->
    </div><!-- /.card -->
</div>

<!-- /.register-box -->
@section scripts{
    <!-- jQuery -->
    <script src="../../plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="../../plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- AdminLTE App -->
    @*<script src="../../dist/js/adminlte.min.js"></script>*@
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/Register.js"></script>
    <script src="~/Scripts/ProjectValidation.js"></script>
}


<script>
     function popuptermandcondition() {
        $("#DeleteConfirmationModals").modal('show');
       
    }
</script>







